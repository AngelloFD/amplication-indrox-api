/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricUpdateManyWithoutClientsInput } from "./AiUsageMetricUpdateManyWithoutClientsInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumClientClientStatus } from "./EnumClientClientStatus";
import { InvoiceUpdateManyWithoutClientsInput } from "./InvoiceUpdateManyWithoutClientsInput";
import { LeadUpdateManyWithoutClientsInput } from "./LeadUpdateManyWithoutClientsInput";
import { PasswordUpdateManyWithoutClientsInput } from "./PasswordUpdateManyWithoutClientsInput";
import { ProjectUpdateManyWithoutClientsInput } from "./ProjectUpdateManyWithoutClientsInput";
import { ServiceWhereUniqueInput } from "../../service/base/ServiceWhereUniqueInput";

@InputType()
class ClientUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => AiUsageMetricUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  billingInfo?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumClientClientStatus,
  })
  @IsEnum(EnumClientClientStatus)
  @IsOptional()
  @Field(() => EnumClientClientStatus, {
    nullable: true,
  })
  clientStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  company?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  invoices?: InvoiceUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => LeadUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => LeadUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => LeadUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  leads?: LeadUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => PasswordUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => PasswordUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => PasswordUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  passwords?: PasswordUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  paymentMethods?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  portalCredentials?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ProjectUpdateManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => ProjectUpdateManyWithoutClientsInput)
  @IsOptional()
  @Field(() => ProjectUpdateManyWithoutClientsInput, {
    nullable: true,
  })
  projects?: ProjectUpdateManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => ServiceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServiceWhereUniqueInput)
  @IsOptional()
  @Field(() => ServiceWhereUniqueInput, {
    nullable: true,
  })
  service?: ServiceWhereUniqueInput | null;
}

export { ClientUpdateInput as ClientUpdateInput };
