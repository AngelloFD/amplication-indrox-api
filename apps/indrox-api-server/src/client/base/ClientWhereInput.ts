/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricListRelationFilter } from "../../aiUsageMetric/base/AiUsageMetricListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { JsonFilter } from "../../util/JsonFilter";
import { EnumClientClientStatus } from "./EnumClientClientStatus";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { InvoiceListRelationFilter } from "../../invoice/base/InvoiceListRelationFilter";
import { LeadListRelationFilter } from "../../lead/base/LeadListRelationFilter";
import { PasswordListRelationFilter } from "../../password/base/PasswordListRelationFilter";
import { ProjectListRelationFilter } from "../../project/base/ProjectListRelationFilter";
import { ServiceWhereUniqueInput } from "../../service/base/ServiceWhereUniqueInput";

@InputType()
class ClientWhereInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricListRelationFilter)
  @IsOptional()
  @Field(() => AiUsageMetricListRelationFilter, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  billingInfo?: JsonFilter;

  @ApiProperty({
    required: false,
    enum: EnumClientClientStatus,
  })
  @IsEnum(EnumClientClientStatus)
  @IsOptional()
  @Field(() => EnumClientClientStatus, {
    nullable: true,
  })
  clientStatus?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  company?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  fullName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceListRelationFilter, {
    nullable: true,
  })
  invoices?: InvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => LeadListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LeadListRelationFilter)
  @IsOptional()
  @Field(() => LeadListRelationFilter, {
    nullable: true,
  })
  leads?: LeadListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PasswordListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PasswordListRelationFilter)
  @IsOptional()
  @Field(() => PasswordListRelationFilter, {
    nullable: true,
  })
  passwords?: PasswordListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  paymentMethods?: JsonFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  portalCredentials?: JsonFilter;

  @ApiProperty({
    required: false,
    type: () => ProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProjectListRelationFilter)
  @IsOptional()
  @Field(() => ProjectListRelationFilter, {
    nullable: true,
  })
  projects?: ProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ServiceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServiceWhereUniqueInput)
  @IsOptional()
  @Field(() => ServiceWhereUniqueInput, {
    nullable: true,
  })
  service?: ServiceWhereUniqueInput;
}

export { ClientWhereInput as ClientWhereInput };
