/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricCreateNestedManyWithoutClientsInput } from "./AiUsageMetricCreateNestedManyWithoutClientsInput";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumClientClientStatus } from "./EnumClientClientStatus";
import { InvoiceCreateNestedManyWithoutClientsInput } from "./InvoiceCreateNestedManyWithoutClientsInput";
import { LeadCreateNestedManyWithoutClientsInput } from "./LeadCreateNestedManyWithoutClientsInput";
import { PasswordCreateNestedManyWithoutClientsInput } from "./PasswordCreateNestedManyWithoutClientsInput";
import { ProjectCreateNestedManyWithoutClientsInput } from "./ProjectCreateNestedManyWithoutClientsInput";
import { ServiceWhereUniqueInput } from "../../service/base/ServiceWhereUniqueInput";

@InputType()
class ClientCreateInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => AiUsageMetricCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  billingInfo?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumClientClientStatus,
  })
  @IsEnum(EnumClientClientStatus)
  @IsOptional()
  @Field(() => EnumClientClientStatus, {
    nullable: true,
  })
  clientStatus?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  company?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => InvoiceCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  invoices?: InvoiceCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => LeadCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => LeadCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => LeadCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  leads?: LeadCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => PasswordCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => PasswordCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => PasswordCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  passwords?: PasswordCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  paymentMethods?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  portalCredentials?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => ProjectCreateNestedManyWithoutClientsInput,
  })
  @ValidateNested()
  @Type(() => ProjectCreateNestedManyWithoutClientsInput)
  @IsOptional()
  @Field(() => ProjectCreateNestedManyWithoutClientsInput, {
    nullable: true,
  })
  projects?: ProjectCreateNestedManyWithoutClientsInput;

  @ApiProperty({
    required: false,
    type: () => ServiceWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ServiceWhereUniqueInput)
  @IsOptional()
  @Field(() => ServiceWhereUniqueInput, {
    nullable: true,
  })
  service?: ServiceWhereUniqueInput | null;
}

export { ClientCreateInput as ClientCreateInput };
