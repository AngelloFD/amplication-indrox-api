/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricCreateNestedManyWithoutServicesInput } from "./AiUsageMetricCreateNestedManyWithoutServicesInput";

import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Min,
  Max,
  IsEnum,
  IsString,
  MaxLength,
  IsInt,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumServiceCategory } from "./EnumServiceCategory";
import { ClientCreateNestedManyWithoutServicesInput } from "./ClientCreateNestedManyWithoutServicesInput";
import { InvoiceCreateNestedManyWithoutServicesInput } from "./InvoiceCreateNestedManyWithoutServicesInput";
import { ProjectCreateNestedManyWithoutServicesInput } from "./ProjectCreateNestedManyWithoutServicesInput";

@InputType()
class ServiceCreateInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricCreateNestedManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricCreateNestedManyWithoutServicesInput)
  @IsOptional()
  @Field(() => AiUsageMetricCreateNestedManyWithoutServicesInput, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricCreateNestedManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  basePrice?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumServiceCategory,
  })
  @IsEnum(EnumServiceCategory)
  @IsOptional()
  @Field(() => EnumServiceCategory, {
    nullable: true,
  })
  category?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ClientCreateNestedManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => ClientCreateNestedManyWithoutServicesInput)
  @IsOptional()
  @Field(() => ClientCreateNestedManyWithoutServicesInput, {
    nullable: true,
  })
  clients?: ClientCreateNestedManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  deliveryTimeline?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceCreateNestedManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => InvoiceCreateNestedManyWithoutServicesInput)
  @IsOptional()
  @Field(() => InvoiceCreateNestedManyWithoutServicesInput, {
    nullable: true,
  })
  invoices?: InvoiceCreateNestedManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: () => ProjectCreateNestedManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => ProjectCreateNestedManyWithoutServicesInput)
  @IsOptional()
  @Field(() => ProjectCreateNestedManyWithoutServicesInput, {
    nullable: true,
  })
  projects?: ProjectCreateNestedManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceName?: string | null;
}

export { ServiceCreateInput as ServiceCreateInput };
