/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricListRelationFilter } from "../../aiUsageMetric/base/AiUsageMetricListRelationFilter";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { EnumServiceCategory } from "./EnumServiceCategory";
import { ClientListRelationFilter } from "../../client/base/ClientListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { InvoiceListRelationFilter } from "../../invoice/base/InvoiceListRelationFilter";
import { ProjectListRelationFilter } from "../../project/base/ProjectListRelationFilter";

@InputType()
class ServiceWhereInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricListRelationFilter)
  @IsOptional()
  @Field(() => AiUsageMetricListRelationFilter, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricListRelationFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  basePrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumServiceCategory,
  })
  @IsEnum(EnumServiceCategory)
  @IsOptional()
  @Field(() => EnumServiceCategory, {
    nullable: true,
  })
  category?: "Option1";

  @ApiProperty({
    required: false,
    type: () => ClientListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ClientListRelationFilter)
  @IsOptional()
  @Field(() => ClientListRelationFilter, {
    nullable: true,
  })
  clients?: ClientListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  deliveryTimeline?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  duration?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => InvoiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => InvoiceListRelationFilter)
  @IsOptional()
  @Field(() => InvoiceListRelationFilter, {
    nullable: true,
  })
  invoices?: InvoiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ProjectListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ProjectListRelationFilter)
  @IsOptional()
  @Field(() => ProjectListRelationFilter, {
    nullable: true,
  })
  projects?: ProjectListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  serviceName?: StringNullableFilter;
}

export { ServiceWhereInput as ServiceWhereInput };
