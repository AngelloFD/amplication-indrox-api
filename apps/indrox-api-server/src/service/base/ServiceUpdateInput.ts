/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AiUsageMetricUpdateManyWithoutServicesInput } from "./AiUsageMetricUpdateManyWithoutServicesInput";

import {
  ValidateNested,
  IsOptional,
  IsNumber,
  Min,
  Max,
  IsEnum,
  IsString,
  MaxLength,
  IsInt,
} from "class-validator";

import { Type } from "class-transformer";
import { EnumServiceCategory } from "./EnumServiceCategory";
import { ClientUpdateManyWithoutServicesInput } from "./ClientUpdateManyWithoutServicesInput";
import { InvoiceUpdateManyWithoutServicesInput } from "./InvoiceUpdateManyWithoutServicesInput";
import { ProjectUpdateManyWithoutServicesInput } from "./ProjectUpdateManyWithoutServicesInput";

@InputType()
class ServiceUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AiUsageMetricUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => AiUsageMetricUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => AiUsageMetricUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  aiUsageMetrics?: AiUsageMetricUpdateManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  basePrice?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumServiceCategory,
  })
  @IsEnum(EnumServiceCategory)
  @IsOptional()
  @Field(() => EnumServiceCategory, {
    nullable: true,
  })
  category?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => ClientUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => ClientUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => ClientUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  clients?: ClientUpdateManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  deliveryTimeline?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  invoices?: InvoiceUpdateManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: () => ProjectUpdateManyWithoutServicesInput,
  })
  @ValidateNested()
  @Type(() => ProjectUpdateManyWithoutServicesInput)
  @IsOptional()
  @Field(() => ProjectUpdateManyWithoutServicesInput, {
    nullable: true,
  })
  projects?: ProjectUpdateManyWithoutServicesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  serviceName?: string | null;
}

export { ServiceUpdateInput as ServiceUpdateInput };
